Matriz.h ------

#pragma una vez

# define MAX 10

clase matriz

{

privado:

    int mat [10] [10];

    int m, n;

público:

    Matriz (int _n, int _m);

    ~ Matriz (vacío);

    void cargarmat ();

    void mostrarmat ();

    void devolvermat (int _mat [10] [10]);

    void sumarmat (int _mat1 [10] [10], int _mat2 [10] [10]);

	transpuesta nula (int _mat1 [MAX] [MAX]);

	matrices multiplicadas de vacío (int A [MAX] [MAX], int B [MAX] [MAX]);

};





Matriz.cpp -------

#include "StdAfx.h"

#include "matriz.h"

#include "iostream"

utilizando namespace std;



Matriz :: Matriz (int _n, int _m)

{

    n = _n;

    m = _m;



}

Matriz :: ~ Matriz (vacío)

{

}



vacío Matriz :: cargarmat ()

{

    para (int a = 0; a <n; a ++)

        para (int b = 0; b <m; b ++)

        {

            cout << "ingresar m [" << a << "] [" << b << "] =";

            cin >> mat [a] [b];

        }

    }





vacío Matriz :: mostrarmat ()

{

    para (int a = 0; a <n; a ++)

        {

            para (int b = 0; b <m; b ++)

            {

                cout << mat [a] [b] << "\ t";

            }

            cout << endl;

        }

}





void Matriz :: devolvermat (int _mat [10] [10])

{

    para (int a = 0; a <n; a ++)

        para (int b = 0; b <m; b ++)

        {

            _mat [a] [b] = mat [a] [b];

        }

}



void Matriz :: sumarmat (int _mat1 [10] [10], int _mat2 [10] [10])

{

    para (int a = 0; a <n; a ++)

        para (int b = 0; b <m; b ++)

			mat [a] [b] = _ mat1 [a] [b] + _ mat2 [a] [b];



}



void Matriz :: transpuesta (int _mat1 [MAX] [MAX])

{

int aux;

	 para (int a = 0; a <n; a ++)

			para (int b = 0; b <m; b ++)

			 mat [b] [a] = _ mat1 [a] [b];

	aux = m;

	m = n;

	n = aux;

}



void Matriz :: multiplicarMatrices (int A [MAX] [MAX], int B [MAX] [MAX]) {

	int i, j, k, acum = 0;

	para (i = 0; i <n; i ++) {

		para (j = 0; j <m; j ++) {

			acum = 0;

			para (k = 0; k <m; k ++) {

				acum = acum + (A [i] [k] * B [k] [j]);

			}

			mat [i] [j] = acum;

		}

	}

}





MatrizMenu.cpp ------

#include "StdAfx.h"

#include "Matriz.h"

#include "iostream"

#include "conio.h"

utilizando namespace std;



vacío principal()

{

    int nrow, ncol, mat1 [10] [10], mat2 [10] [10], opc;

    hacer{

        cout << "ingrese num fil:";

        cin >> nrow;

    } while (nrow <0 || nrow> 10);



    hacer{

        cout << "ingrese num col:";

        cin >> ncol;

    } while (ncol <0 || ncol> 10);

	Matriz m1 (nrow, ncol);

	Matriz m2 (nrow, ncol);

	Matriz m3 (nrow, ncol);

	hacer{

	 cout << endl << endl << "------------------------------ MENU --------- ------------------ ";

	 cout << endl << endl << "1.-Cargar.";

	 cout << endl << "2.-Mostrar.";

	 cout << endl << "3.-Matriz transpuesta.";

	 cout << endl << "4.-Suma de matrices.";

	 cout << endl << "5.-Matrices multiplicadas.";

	 cout << endl << "0. Detalles";

	 cout << endl << endl << "Seleccione su opcion:";

	 cin >> opc;

	 interruptor (opc)

	 {

	 caso 1:

		m1.cargarmat ();

		 descanso;

	 caso 2:

		m1.mostrarmat ();

		 descanso;

	 caso 3:

		 {

		 m1.devolvermat (mat1);

		 m1.transpuesta (mat1);

		 descanso;

		 }

	 caso 4:

		{

		 m1.devolvermat (mat1);

		 cout << "Cargar la segunda matriz \ n";

		 m2.cargarmat ();

		 m2.devolvermat (mat2);

		 m3.sumarmat (mat1, mat2);

		 cout << "Mostrar la segunda matriz \ n";

		 m2.mostrarmat ();

		 cout << "Mostrar el resultado de la suma en una matriz \ n";

		 m3.mostrarmat ();

		 getch ();

		 descanso;

		}

	 caso 5:

		 {

		 m1.devolvermat (mat1);

		 cout << "Cargar la segunda matriz \ n";

		 m2.cargarmat ();

		 m2.devolvermat (mat2);

		 m3.multiplicarMatrices (mat1, mat2);

		 cout << "Mostrar la segunda matriz \ n";

		 m2.mostrarmat ();

		 cout << "Mostrar el resultado de la multiplicación en una matriz: \ n";

		 m3.mostrarmat ();

		 getch ();

		 descanso;

		 }

	 caso 0:

		 {

			 cout << "Salir";

			 descanso;

		 }

	 defecto: 

		{

		cout << "Error";

		descanso;

		}

	}

	} while (opc! = 0);

    getch ();



}
